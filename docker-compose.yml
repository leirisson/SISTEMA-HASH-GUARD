version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: hashguard-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hashguard_db
      POSTGRES_USER: hashguard_user
      POSTGRES_PASSWORD: hashguard_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - hashguard-network

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: hashguard-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hashguard-network

  # Aplicação HashGuard
  hashguard-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hashguard-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://hashguard_user:hashguard_password@postgres:5432/hashguard_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./uploads:/app/uploads
      - ./signatures:/app/signatures
      - ./timestamps:/app/timestamps
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - hashguard-network

  # Nginx para proxy reverso (produção)
  nginx:
    image: nginx:alpine
    container_name: hashguard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - hashguard-app
    networks:
      - hashguard-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hashguard-network:
    driver: bridge